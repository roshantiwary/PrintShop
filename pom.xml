<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>print-store</groupId>
    <artifactId>PrintShop</artifactId>
    <packaging>war</packaging>
    <version>0.0.1-SNAPSHOT</version>

    <name>Getting Started with Spring on JBoss</name>

    <properties>
                <!-- Spring version -->
        <version.jboss.bom>1.0.5.Final</version.jboss.bom>
        
        <!-- Third Party dependencies -->
        <version.standard.taglibs>1.1.2</version.standard.taglibs>
        <version.commons.logging>1.1.1</version.commons.logging>

        <!-- JBoss AS plugin for deployment -->
        <version.jboss.as.maven.plugin>7.3.Final</version.jboss.as.maven.plugin>

    </properties>

    <dependencyManagement>

        <dependencies>
                        <!-- Define the version of JBoss' Java EE 6 APIs we want to import. Any
                dependencies from org.jboss.spec will have their version defined by this
                BOM -->
            <!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill
                of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection)
                of artifacts. We use this here so that we always get the correct versions
                of artifacts. Here we use the jboss-javaee-web-6.0 stack (you can read this
                as the JBoss stack of the Java EE Web Profile 6 APIs), and we use version
                3.0.0.Final which is the latest release of the stack. You can actually use
                this stack with any version of JBoss AS that implements Java EE 6, not just
                JBoss AS 7! -->
            
            <dependency>
		      <groupId>org.springframework</groupId>
		      <artifactId>spring-framework-bom</artifactId>
		      <version>4.0.2.RELEASE</version>
		      <type>pom</type>
		      <scope>import</scope>
		    </dependency>
            
             <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-javaee-6.0-with-spring</artifactId>
                <version>${version.jboss.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            
            <dependency>
                <groupId>taglibs</groupId>
                <artifactId>standard</artifactId>
                <version>${version.standard.taglibs}</version>
            </dependency>

            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${version.commons.logging}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- Import Spring dependencies, these are either from community or versions
            certified in WFK2 -->
        
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>

        <!-- Other community dependencies -->
        <dependency>
            <groupId>aopalliance</groupId>
            <artifactId>aopalliance</artifactId>
        </dependency>
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
        </dependency>
        
        

        <!-- Needed for running tests (you may also use TestNG) -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.2</version>
            <scope>test</scope>
        </dependency>


        <!-- Add cglib for the MemberDaoTest -->
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>

        <!-- Add H2 dependency for embedded testing database -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.3.165</version>
            <scope>provided</scope>
        </dependency>

        <!-- Add JSON dependency, specified in jboss-deployment-structure.xml -->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.9.3</version>
        </dependency>

        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
            <version>1.9.3</version>
        </dependency>
 
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.6.4</version>
            <scope>provided</scope>
        </dependency>
        <!-- <dependency>
        	<groupId>org.springframework.data</groupId>
        	<artifactId>spring-data-mongodb</artifactId>
        </dependency> -->
        <dependency>
        	<groupId>org.springframework.data</groupId>
        	<artifactId>spring-data-mongodb</artifactId>
        	<version>1.6.0.RELEASE</version>
        </dependency>
        <dependency>
        	<groupId>org.springframework.data</groupId>
        	<artifactId>spring-data-commons</artifactId>
        	<version>1.9.0.RELEASE</version>
        </dependency>
        <dependency>
        	<groupId>org.mongodb</groupId>
        	<artifactId>mongo-java-driver</artifactId>
        	<version>2.12.3</version>
        </dependency>
<<<<<<< HEAD
        
         <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
        
		<dependency>
		  <groupId>org.springframework.security</groupId>
		  <artifactId>spring-security-core</artifactId>
		  <version>3.2.6.RELEASE</version>
		</dependency>
		<dependency>
		  <groupId>org.springframework.security</groupId>
		  <artifactId>spring-security-web</artifactId>
		  <version>3.2.6.RELEASE</version>
		</dependency>
		<dependency>
		  <groupId>org.springframework.security</groupId>
		  <artifactId>spring-security-config</artifactId>
		  <version>3.2.6.RELEASE</version>
		</dependency>
		<dependency>
	        <groupId>org.springframework.security</groupId>
	        <artifactId>spring-security-taglibs</artifactId>
	        <version>3.2.6.RELEASE</version>
    	</dependency>
    	<dependency>
		    <groupId>javax.validation</groupId>
		    <artifactId>validation-api</artifactId>
		    <version>1.1.0.Final</version>
		</dependency>
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-validator</artifactId>
		    <version>5.0.1.Final</version>
		 </dependency>
        
=======
>>>>>>> 025a2f473bba330550d96d0f90ab9a3adb085c74
    </dependencies>

    <build>
        <finalName>PrintShop</finalName>
        <plugins>
            <!-- Force Java 6 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <!-- Deployent on AS from console -->
            <plugin>
                <groupId>org.jboss.as.plugins</groupId>
                <artifactId>jboss-as-maven-plugin</artifactId>
                <version>${version.jboss.as.maven.plugin}</version>
            </plugin>
            <!-- Surefire plugin before 2.9 version is buggy -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.12</version>
            </plugin>
            <plugin>
            	<groupId>org.mortbay.jetty</groupId>
            	<artifactId>jetty-maven-plugin</artifactId>
            	<version>8.1.15.v20140411</version>
		        <configuration>
		 
		          <scanIntervalSeconds>10</scanIntervalSeconds>
		 
		          <!-- Configure the webapp -->
		          <contextPath>/shop</contextPath>
		          <webDefaultXml>src/main/webapp/WEB-INF/web.xml</webDefaultXml>
		          <!--  <overrideWebXml>src/main/resources/override-web.xml</overrideWebXml> -->
		 
		          <!-- OR, as of jetty6.1.6rc0, you can use the webAppConfig element instead
		          <webAppConfig>
		            <contextPath>/test</contextPath>
		            <tempDirectory>${project.build.directory}/work</tempDirectory>
		            <defaultsDescriptor>src/main/resources/webdefault.xml</defaultsDescriptor>
		            <overrideDescriptor>src/main/resources/override-web.xml</overrideDescriptor>
		          </webAppConfig>
		          -->
		        </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <!-- When built in OpenShift the 'openshift' profile will be used when
                invoking mvn. -->
            <!-- Use this profile for any OpenShift specific customization your app
                will need. -->
            <!-- By default that is to put the resulting archive into the 'deployments'
                folder. -->
            <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
            <id>openshift</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>2.2</version>
                        <configuration>
                            <outputDirectory>deployments</outputDirectory>
                            <warName>ROOT</warName>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
